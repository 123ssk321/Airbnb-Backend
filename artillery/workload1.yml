config:
  target: 'https://scc24appnortheurope4204.azurewebsites.net/rest'
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
  processor: "./test-utils.js"
  phases:
  - name: "Warm up"    
    duration: 20
    arrivalCount: 10
  - name: "Experiment"    
    duration: 60
    arrivalRate: 2               # set this value as high as possible for avoiding timeouts

scenarios:
  - name: 'Create users'
    weight: 1
    flow:
      - loop:                            # let's create 50 users - loop ... count
        - post:                          # First: post image for the user
            url: "/media"
            headers:
              Content-Type: application/octet-stream
              Accept: application/json
            beforeRequest: "uploadImageBody"
            capture: 
              regexp: "(.+)"
              as: "imageId"              # capture the reply as image id to be used in user creation
        - function: "genNewUser"         # Generate the needed information for the user
        - post:
            url: "/user"
            headers:
              Content-Type: application/json
              Accept: application/json
            json:
              id: "{{ id }}"
              name: "{{ name }}"
              pwd: "{{ pwd }}"
              photoId: "{{ imageId }}"
              houseIds: []
            afterResponse: "genNewUserReply"    # capture result and store in file
        count: 50
        
  - name: 'User checks own rentals'
    weight: 5
    flow:
      - function: "selectUserSkewed"
      - post:                          # First: login as a user
          url: "/user/auth"
          name: "POST:/user/auth"
          headers:
            Content-Type: application/json
          json:
            user: "{{ user }}"
            pwd: "{{ pwd }}"
      - get:                          # Get rentals for the user (assuming rentals + houses + discount initial page)
          url: "/user/{{ user }}/rentals?st=0&len=20"
          name: "GET:/user/*/rentals"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "rentalsLst"
      - get:                          # Get houses for the user (assuming rentals + houses + discount initial page)
          url: "/user/{{ user }}/houses?st=0&len=20"
          name: "GET:/user/*/houses"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "housesLst"
      - get:                          # Get generic discounted houses (assuming rentals + houses + discount initial page)
          url: "/house?discount=1&st=0&len=20"
          name: "GET:/house/discount"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "housesDiscountLst"
      - loop:                                   # Check houses for their rentals
        - get:                          
            url: "/house/{{ $loopElement.house }}"
            name: "GET:/house/*"
            headers:
              Accept: application/json
        over: "rentalsLst"

  - name: 'User checks own houses'
    weight: 5
    flow:
      - function: "selectUser"
      - post:                          # First: login as a user
          url: "/user/auth"
          name: "POST:/user/auth"
          headers:
            Content-Type: application/json
          json:
            user: "{{ user }}"
            pwd: "{{ pwd }}"
      - get:                          # Get rentals for the user (assuming rentals + houses + discount initial page)
          url: "/user/{{ user }}/rentals?st=0&len=20"
          name: "GET:/user/*/rentals"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "rentalsLst"
      - get:                          # Get houses for the user (assuming rentals + houses + discount initial page)
          url: "/user/{{ user }}/houses?st=0&len=20"
          name: "GET:/user/*/houses"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "housesLst"
      - get:                          # Get generic discounted houses (assuming rentals + houses + discount initial page)
          url: "/house?discount=1&st=0&len=20"
          name: "GET:/house/discount"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "housesDiscountLst"
      - loop:
        - get:                                   # Check houses for their rentals                          
            url: "/house/{{ $loopElement.id }}/rental?st=0&len=20"
            name: "GET:/house/*/rental"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "houseRentalsLst"
        - get:                                   # Get unanswered questions
            url: "/house/{{ $loopElement.id }}/question?noanswer=true&st=0&len=20"
            name: "GET:/house/*/question"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "questionLst"
            ifTrue: "houseId"
        - function: "selectQuestion"
        - put:                                   # Answer one question                          
            url: "/house/{{ houseId }}/question/{{ questionId }}/reply"
            name: "PUT:/house/*/question/*/reply"
            headers:
              Accept: application/json
              Content-Type: application/json
            json:
              reply: "{{ reply }}"
            ifTrue: "questionId"
        over: "housesLst"

  - name: 'Mixed browsing'
    weight: 40
    flow:
      - function: "selectUser"
      - post:                          # First: login as a user
          url: "/user/auth"
          name: "POST:/user/auth"
          headers:
            Content-Type: application/json
          json:
            user: "{{ user }}"
            pwd: "{{ pwd }}"
      - loop:                                  
        - get:                          # Get rentals for the user (assuming rentals + houses + discount initial page)
            url: "/user/{{ user }}/rentals?st=0&len=20"
            name: "GET:/user/*/rentals"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "rentalsLst"
        - get:                          # Get houses for the user (assuming rentals + houses + discount initial page)
            url: "/user/{{ user }}/houses?st=0&len=20"
            name: "GET:/user/*/houses"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "housesLst"
        - get:                          # Get generic discounted houses (assuming rentals + houses + discount initial page)
            url: "/house?discount=1&st=0&len=20"
            name: "GET:/house/discount"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "housesDiscountLst"
        - function: "decideNextAction"
        ################################# Search location
        - get:                          
            url: "/house?location={{ location }}&initDate={{ initDate }}$endDate={{ endDate }}&st=0&len=20"
            name: "GET:/house/*"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "housesLst"
            ifTrue: "nextAction == 1"
        - function: "selectHouse"
        ################################# Browse next page
        - get:                          
            url: "/house?discount=1&st=0&len=20"
            name: "GET:/house/discount"
            headers:
              Accept: application/json
            ifTrue: "afterNextAction == 0 and nextAction == 0"
        - get:                          
            url: "/house?location={{ location }}&initDate={{ initDate }}$endDate={{ endDate }}&st=20&len=20"
            name: "GET:/house/search"
            headers:
              Accept: application/json
            ifTrue: "afterNextAction == 0 and nextAction == 1"
        ################################# Check questions
        - get:                          
            url: "/house/{{ houseId }}/question?st=0&len=20"
            name: "GET:/house/*/question"
            headers:
              Accept: application/json
            ifTrue: "houseId and afterNextAction == 1"
        ################################# Post questions
        - post:                          
            url: "/house/{{ houseId }}/question"
            name: "POST:/house/*/question"
            headers:
              Accept: application/json
              Content-Type: application/json
            json:
              house: "{{ houseId }}"
              owner: "{{ owner }}"
              user: "{{ user }}"
              text: "{{ text }}"
            ifTrue: "houseId and afterNextAction == 2"
        ################################# Reserve house
        - get:                                           # get free slots for selected house
            url: "/house/{{ houseId }}/rental?free=true"   
            name: "GET:/house/*/rental"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "rentalLst"
            ifTrue: "houseId and afterNextAction == 3"
        - function: "selectRental"            
        - post:                                          # reserve selected house in selected slot
            url: "/house/{{ houseId }}/rental/{{ rentalId }}/renter"
            name: "POST:/house/*/rental/*/renter"
            headers:
              Accept: application/json
            json:
              renter: "{{ user }}"
            ifTrue: "rentalId and afterNextAction == 3"
        whileTrue: "random80"

