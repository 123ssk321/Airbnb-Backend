config:
  target: 'https://scc24appwesteurope57418.azurewebsites.net/rest'
  plugins:
    expect: {}
    metrics-by-endpoint:
      useOnlyRequestNames: true
  processor: "./test-utils.js"
  phases:
  - name: "Warm up"    
    duration: 1
    arrivalCount: 1
  #  duration: 20
  #  arrivalCount: 10
  #- name: "Experiment"    
  #  duration: 60            # set this value as high as possible for avoiding timeouts

scenarios:
  #- name: 'User updates account name'
  #  weight: 1
  #  flow:
      #- function: "selectUserSkewed"
      #- post:                          # First: login as a user
       #    url: "/user/auth"
       #    name: "POST:/user/auth"
       #    headers:
       #      Content-Type: application/json
       #    json:
       #     user: "{{ id }}"
       #     pwd: "{{ pwd }}"
 #      - function: "genUpdateUsername"
 #      - put:                          # Get rentals for the user (assuming rentals + houses + discount initial page)
 #          url: "/users/{{ id }}"
 #          headers:
 #              Content-Type: application/json
 #              Accept: application/json
 #          json:
 #            id: null
 #            name: "{{ name }}"
 #            pwd: null
 #            photoId: null
 #            houseId: null
 #          capture: 
 #            json: "$.name"
 #            as: "newName"
 #          expect:
 #            - equals:
 #              - "{{ newName }}"
 #              - "{{ name }}"

 #  - name: 'User deletes account'
 #   weight: 1
 #   flow:
 #     - function: "selectUserSkewed"
      #- post:                          # First: login as a user
      #    url: "/user/auth"
      #    name: "POST:/user/auth"
      #    headers:
      #      Content-Type: application/json
      #    json:
      #      user: "{{ user }}"
      #      pwd: "{{ pwd }}"      
  #    - delete:                    
  #        url: "/users/{{ id }}"
  #!!!        qs:
  #!!!          password: "{{ pwd }}"
  #        headers:
  #          Accept: application/json
  #        capture:
  #          - json: "$.id"
  #            as: oldId
  #        expect:
  #          - equals:
  #            - "{{oldId}}"
  #            - "{{ id }}"
  #          - statusCode:
  #            - 200
  #        afterResponse: "genNewUserReply"

  - name: 'User checks rentals of the houses he owns'
    weight: 1
    flow:
      - function: "selectUserSkewed"
      #- post:                          # First: login as a user
      #    url: "/user/auth"
      #    name: "POST:/user/auth"
      #    headers:
      #      Content-Type: application/json
      #    json:
      #      user: "{{ user }}"
      #      pwd: "{{ pwd }}"
      - get:                          # Get houses of the user 
          url: "/house/{{ id }}"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "housesLst"
      - get:                          # Get generic available houses available for a given start-date in a location
          url: "/house?location=Lisbon&starDate=01-01-2023"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "housesGenericLst"  
      - get:                          # Get  list of discounted rentals in the near future (2 weeks)
          url: "/house/discount"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "rentalsDiscountLst"  
      - loop:                                   # Check the rentals of the houses of the user
        - get:                          
            url: "/house/{{ $loopElement.id }}/rental"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "houseRentalsLst"

        - get:                                   # Get unanswered questions
            url: "/house/{{ $loopElement.id }}/question"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "questionLst"
        - function: "selectQuestion"

        - post:                                   # Creates a reply for a question of a given house                       
            url: "/house/{{ $loopElement.id }}/question/{{ questionId }}"
            headers:
              Accept: application/json
              Content-Type: application/json
            json:
              userId: "{{ id }}"
              message: "{{ reply }}"
            ifTrue: "questionId"
        over: "housesLst"


      


        


