config:
  target: 'https://scc24appwesteurope57449.azurewebsites.net/rest'
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
  processor: "./test-utils.js"
  phases:
  - name: "Warm up"    
    duration: 20
    arrivalCount: 10
  - name: "Experiment"    
    duration: 60
    arrivalRate: 2               # set this value as high as possible for avoiding timeouts

scenarios:
  # - name: 'Create users'
  #   weight: 1
  #   flow:
  #     - loop:                            # let's create 50 users - loop ... count
  #       - post:                          # First: post image for the user
  #           url: "/media"
  #           headers:
  #             Content-Type: application/octet-stream
  #             Accept: application/json
  #           beforeRequest: "uploadImageBody"
  #           capture: 
  #             regexp: "(.+)"
  #             as: "imageId"              # capture the reply as image id to be used in user creation
  #       - function: "genNewUser"         # Generate the needed information for the user
  #       - post:
  #           url: "/user"
  #           headers:
  #             Content-Type: application/json
  #             Accept: application/json
  #           json:
  #             id: "{{ id }}"
  #             name: "{{ name }}"
  #             pwd: "{{ pwd }}"
  #             photoId: "{{ imageId }}"
  #             houseIds: []
  #             rentalIds: []
  #           afterResponse: "genNewUserReply"    # capture result and store in file
  #       count: 50
        
  - name: 'User checks own houses'
    weight: 5
    flow:
      - function: "selectUserSkewed"
      - post:                          # First: login as a user
          url: "/auth"
          #name: "POST:/auth"
          headers:
            Content-Type: application/json
          json:
            userId: "{{ id }}"
            pwd: "{{ pwd }}"
          capture:
            header: "set-cookie"
            as: "sessionId"
      - get:                          # Get rentals for the user (assuming rentals + houses + discount initial page)
          url: "/users/{{ id }}/rental"
          #cookie: "{{ sessionId }}"
          #name: "GET:/user/*/rentals"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "rentalsLst"
      - get:                          # Get houses for the user (assuming rentals + houses + discount initial page)
          url: "/users/{{ id }}/house"
          #cookie: "{{ sessionId }}"
          #name: "GET:/user/*/houses"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "housesLst"
      - get:                          # Get generic discounted houses (assuming rentals + houses + discount initial page)
          url: "/house/discount"
          #name: "GET:/house/discount"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "housesDiscountLst"
      - loop:
        - get:                                   # Check houses for their rentals                          
            url: "/house/{{ $loopElement.id }}/rental"
            #cookie: "{{ sessionId }}"
            #name: "GET:/house/*/rental"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "houseRentalsLst"
        - get:                                   # Get unanswered questions
            url: "/house/{{ $loopElement.id }}/question?answered=false"
            #name: "GET:/house/*/question"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "questionLst"
            ifTrue: "houseId"
        - function: "selectQuestion"
        - put:                                   # Answer one question                          
            url: "/house/{{ houseId }}/question/{{ questionId }}"
            #cookie: "{{ sessionId }}"
            #name: "PUT:/house/*/question/*"
            headers:
              Accept: application/json
              Content-Type: application/json
            json:
              reply: "{{ reply }}"
            ifTrue: "questionId"
        over: "housesLst"
