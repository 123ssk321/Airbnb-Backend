# --------------------------------------------------- MONGODB ----------------------------------------------------------
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /data/mongo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  volumeName: pv
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          args: ["--dbpath","/data/db"]
          ports:
           - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "mongoman"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "nocosmos"
          volumeMounts:
            - name: "mongo-data-dir"
              mountPath: "/data/db"
      volumes:
        - name: "mongo-data-dir"
          persistentVolumeClaim:
            claimName: "pvc"
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  ports:
    - port: 27017
  selector:
    app: mongo
# --------------------------------------------------- REDIS ------------------------------------------------------------




# ------------------------------------------------ AIRBNB-BACKEND ------------------------------------------------------


#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: azure-vote-back
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: azure-vote-back
#  template:
#    metadata:
#      labels:
#        app: azure-vote-back
#    spec:
#      nodeSelector:
#        "kubernetes.io/os": linux
#      containers:
#        - name: azure-vote-back
#          image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
#          env:
#            - name: DATABASE_TYPE
#              value: "MONGODB"
#            - name: MONGODB_NAME
#              value: "airbnbatmongo"
#            - name: MONGO_INITDB_ROOT_USERNAME
#              value: "mongoman"
#            - name: MONGO_INITDB_ROOT_PASSWORD
#              value: "nocosmos"
#            - name: MONGODB_CONNECTION_STRING
#              value: "mongodb://mongoman:nocosmos@mongo:27017/"
#            - name: REDIS_URL
#              value: ""
#            - name: REDIS_KEY
#              value: ""
#
#          resources:
#            requests:
#              cpu: 250m
#              memory: 256Mi
#            limits:
#              cpu: 500m
#              memory: 1024Mi
#          ports:
#            - containerPort: 6379
#              name: redis
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: airbnb-backend
#spec:
#  ports:
#    - port: 6379
#  selector:
#    app: airbnb-backend
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: azure-vote-front
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: azure-vote-front
#  template:
#    metadata:
#      labels:
#        app: azure-vote-front
#    spec:
#      nodeSelector:
#        "kubernetes.io/os": linux
#      containers:
#        - name: azure-vote-front
#          image: mcr.microsoft.com/azuredocs/azure-vote-front:v2
#          resources:
#            requests:
#              cpu: 250m
#              memory: 256Mi
#            limits:
#              cpu: 500m
#              memory: 1024Mi
#          ports:
#            - containerPort: 80
#          env:
#            - name: REDIS
#              value: "azure-vote-back"
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: azure-vote-front
#spec:
#  type: LoadBalancer
#  ports:
#    - port: 80
#  selector:
#    app: azure-vote-front
